{"version":3,"sources":["assets/img/plainid-logo-white.png","cmps/AppHeader.jsx","assets/img/arrow-right.svg","assets/img/active.svg","cmps/resource-cmps/ResourcePreview.jsx","cmps/resource-cmps/ResourceList.jsx","assets/img/search.svg","cmps/resource-cmps/ResourceSearch.jsx","cmps/AppMenu.jsx","cmps/resource-cmps/resource-info-cmps/ResourceHeader.jsx","assets/img/help-12.svg","cmps/resource-cmps/resource-info-cmps/ResourceDetails.jsx","services/database.service.js","services/action.service.js","cmps/resource-cmps/resource-info-cmps/ResourceActions.jsx","cmps/resource-cmps/ResourceInfo.jsx","services/resource.service.js","services/utils.js","App.jsx","index.js"],"names":["AppHeader","className","src","logo","alt","ResourcePreview","resource","selectedResource","onSelectResource","isActive","id","onClick","active","name","arrow","ResourceList","resources","length","map","ResourceSearch","state","input","handleChange","ev","setState","target","value","props","onSetFilter","onChange","this","type","placeholder","autoComplete","search","Component","AppMenu","ResourceHeader","headerInfo","description","ResourceDetails","resourceType","path","help","gDatabase","require","a","databaseService","query","actionIds","actions","find","action","actionService","getActions","ResourceActions","prevProps","JSON","stringify","ResourceInfo","filter","regex","RegExp","test","resourceService","getResources","utilService","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","App","filterBy","loadActions","loadActionsDebounced","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b0bbbd1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plainid-logo-white.4cd730df.png\";","import logo from '../assets/img/plainid-logo-white.png'\r\n\r\nexport function AppHeader() {\r\n        return (\r\n            <header className=\"app-header flex align-center\">\r\n                <img src={logo} alt=\"PlainId\" />\r\n                <h1>PlainID- Demo App</h1>\r\n            </header>\r\n        )\r\n}","export default __webpack_public_path__ + \"static/media/arrow-right.a3e03923.svg\";","export default __webpack_public_path__ + \"static/media/active.2ed6ace1.svg\";","import arrow from '../../assets/img/arrow-right.svg'\r\nimport active from '../../assets/img/active.svg'\r\n\r\nexport function ResourcePreview({resource, selectedResource, onSelectResource}) {\r\n        const isActive = resource.id === selectedResource?.id;\r\n        return (\r\n            <section className={`resource-preview flex align-center space-between ${isActive ? 'active' : ''}`}\r\n                onClick={() => onSelectResource(resource)}>\r\n                <div className=\"resource-title align-center flex\">\r\n                    <img src={active} alt=\"active\" />\r\n                    <span>{resource.name}</span>\r\n                </div>\r\n                {isActive &&\r\n                    <img src={arrow} alt=\"arrow\" />\r\n                }\r\n            </section>\r\n        )\r\n}","import { ResourcePreview } from './ResourcePreview';\r\n\r\nexport function ResourceList({ resources, selectedResource, onSelectResource }) {\r\n    return (\r\n        <section className=\"resource-list flex column\">\r\n            {resources.length ? resources.map(resource => <ResourcePreview\r\n                key={resource.id}\r\n                resource={resource}\r\n                selectedResource={selectedResource}\r\n                onSelectResource={onSelectResource} />)\r\n                : <h1>No resources found!</h1>}\r\n        </section>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/search.d3887993.svg\";","import { Component } from \"react\";\r\nimport search from '../../assets/img/search.svg'\r\n\r\nexport class ResourceSearch extends Component {\r\n    state = {\r\n        input: ''\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ input: ev.target.value }, () => {\r\n            this.props.onSetFilter(this.state.input)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"resource-search\">\r\n                <div className=\"search-bar\">\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        value={this.state.input}\r\n                        type=\"text\"\r\n                        placeholder=\"Search Resource\"\r\n                        autoComplete=\"off\"/>\r\n                    <img src={search} alt=\"search\" />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import { ResourceList } from \"./resource-cmps/ResourceList\";\r\nimport { ResourceSearch } from './resource-cmps/ResourceSearch';\r\n\r\nexport function AppMenu({ resources, selectedResource, onSetFilter, onSelectResource }) {\r\n    return (\r\n        <section className=\"app-menu flex column\">\r\n            <div className=\"app-menu-top flex column gap\">\r\n                <h1>My Resources</h1>\r\n                <ResourceSearch onSetFilter={onSetFilter} />\r\n            </div>\r\n            <ResourceList\r\n                resources={resources}\r\n                selectedResource={selectedResource}\r\n                onSelectResource={onSelectResource} />\r\n        </section>\r\n    )\r\n}","export function ResourceHeader({ headerInfo }) {\r\n    return (\r\n        <section className=\"resource-header padding15\" >\r\n            <h1>{headerInfo.name}</h1>\r\n            <p>{headerInfo.description}</p>\r\n        </section>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/help-12.a3d4cef2.svg\";","import help from '../../../assets/img/help-12.svg'\r\n\r\nexport function ResourceDetails({ resource }) {\r\n    const { name, description, resourceType, path } = resource\r\n    return (\r\n        <section className=\"resource-details flex column card\" >\r\n            <div className=\"card-title flex align-center\">\r\n                <span>\r\n                    General Details\r\n                </span>\r\n                <img src={help} alt=\"help\" />\r\n            </div>\r\n            <div className=\"card-info flex column\">\r\n                <span className=\"details-info-label\">Name</span>\r\n                <p className=\"card-row\">{name}</p>\r\n                <span className=\"details-info-label\">Description</span>\r\n                <p className=\"card-row\">{description}</p>\r\n                <span className=\"details-info-label\">Resource Type</span>\r\n                <p className=\"card-row\">{resourceType}</p>\r\n                <span className=\"details-info-label\">Path</span>\r\n                <p className=\"card-row\">{path}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","const gDatabase = require('../data/data.json');\r\n\r\nasync function query(){\r\n    return gDatabase\r\n}\r\n\r\nexport const databaseService = {\r\n    query\r\n}\r\n","import { databaseService } from './database.service';\r\n\r\nasync function getActions(actionIds) {\r\n    const { actions } = await databaseService.query()\r\n    return actionIds.map(id => actions.find(action => action.id === id))\r\n}\r\n\r\nexport const actionService = {\r\n    getActions\r\n}\r\n","import { Component } from 'react';\r\nimport { actionService } from '../../../services/action.service';\r\nimport help from '../../../assets/img/help-12.svg'\r\n\r\nexport class ResourceActions extends Component {\r\n    state = {\r\n        actions: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getActions()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // JSON.strigify prevents rendering an array with the same values but different pointers\r\n        if (JSON.stringify(prevProps.actionIds) !== JSON.stringify(this.props.actionIds)){\r\n            this.getActions()\r\n        }\r\n    }\r\n\r\n    getActions = async () => {\r\n        const actions = await actionService.getActions(this.props.actionIds)\r\n        this.setState({ actions })\r\n    }\r\n\r\n    render() {\r\n        const { actions } = this.state\r\n        return (\r\n            <section className=\"resource-actions flex column card\" >\r\n                <div className=\"card-title flex align-center\">\r\n                    <span>\r\n                        Permitted Actions\r\n                    </span>\r\n                    <img src={help} alt=\"help\" />\r\n                </div>\r\n                <div className=\"card-info flex column\">\r\n                    {actions.length && actions.map(action => <p key={action.id} className=\"card-row\">{action.name}</p>)}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import { ResourceHeader } from './resource-info-cmps/ResourceHeader';\r\nimport { ResourceDetails } from './resource-info-cmps/ResourceDetails';\r\nimport { ResourceActions } from './resource-info-cmps/ResourceActions';\r\n\r\nexport function ResourceInfo({ resource }) {\r\n  return (\r\n    <section className=\"resource-info\" >\r\n      <div className=\"resource-container flex column\">\r\n        <ResourceHeader headerInfo={{ name: resource.name, description: resource.description }} />\r\n        <div className=\"resource-inner-container flex\">\r\n          <ResourceDetails resource={resource} />\r\n          <ResourceActions actionIds={resource.actionIds} />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { databaseService } from './database.service';\r\n\r\nasync function getResources(filter = null) {\r\n    const { resources } = await databaseService.query()\r\n    if (!filter) return resources;\r\n    const regex = new RegExp(filter, 'i');\r\n    return resources.filter(resource => regex.test(resource.name));\r\n}\r\n\r\n\r\nexport const resourceService = {\r\n    getResources\r\n}\r\n","function debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function () {\r\n\t\tconst context = this, args = arguments,\r\n\t\t\tlater = function () {\r\n\t\t\t\ttimeout = null;\r\n\t\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t\t};\r\n\t\tconst callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};\r\n\r\nexport const utilService = {\r\n\tdebounce\r\n}\r\n","import { Component } from 'react';\r\n\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { AppMenu } from './cmps/AppMenu';\r\nimport { ResourceInfo } from './cmps/resource-cmps/ResourceInfo';\r\n\r\nimport { resourceService } from './services/resource.service';\r\nimport { utilService } from './services/utils';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    resources: [],\r\n    selectedResource: null,\r\n    filterBy: ''\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.loadActions()\r\n    if (!this.state.selectedResource) {\r\n      this.onSelectResource(this.state.resources[0])\r\n    }\r\n  }\r\n\r\n  loadActions = async () => {\r\n    const filter = this.state.filterBy\r\n    const resources = await resourceService.getResources(filter)\r\n    this.setState({ resources })\r\n  }\r\n\r\n  loadActionsDebounced = utilService.debounce(async () => await this.loadActions(), 250);\r\n\r\n  onSetFilter = (filterBy) => {\r\n    this.setState({ filterBy }, this.loadActionsDebounced())\r\n  }\r\n\r\n  onSelectResource = (selectedResource) => {\r\n    this.setState({ selectedResource })\r\n  }\r\n\r\n  render() {\r\n    const { resources, selectedResource } = this.state\r\n    return (\r\n      <section className=\"app flex column\">\r\n        <AppHeader />\r\n        <main className=\"app-content flex grow\">\r\n          <AppMenu\r\n            resources={resources}\r\n            selectedResource={selectedResource}\r\n            onSetFilter={this.onSetFilter}\r\n            onSelectResource={this.onSelectResource} />\r\n          {selectedResource &&\r\n            <ResourceInfo resource={selectedResource} />\r\n          }\r\n        </main>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App.jsx';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}